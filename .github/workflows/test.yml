name: Test

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
      POSTGRES_DB: ${{ vars.POSTGRES_DB }}
      POSTGRES_USER: ${{ vars.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      TIMELINE_ADMIN_USER: ${{ vars.TIMELINE_ADMIN_USER }}
      TIMELINE_ADMIN_PASSWORD: ${{ secrets.TIMELINE_ADMIN_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start DB
        run: |
          docker compose -f compose.yml up -d db
          CONTAINER=$(docker compose -f compose.yml ps -q db)
          for i in $(seq 1 30); do
            if docker exec "$CONTAINER" pg_isready -q -U "${POSTGRES_USER:-postgres}" -p "${POSTGRES_PORT:-5432}"; then
              break
            fi
            sleep 2
          done
          docker exec "$CONTAINER" pg_isready -q -U "${POSTGRES_USER:-postgres}" -p "${POSTGRES_PORT:-5432}" || (docker compose -f compose.yml logs db && exit 1)
        shell: bash

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run integration tests
        run: |
          echo -n "$JWT_SECRET" | wc -c
          echo -n "$JWT_SECRET" | base64 --decode 2>/dev/null | wc -c
          ./gradlew clean test --no-daemon --stacktrace --info
